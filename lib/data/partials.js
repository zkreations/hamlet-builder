export const superPartials = {
  "super.defaultmarkups": "{{!-- Clean all inclusions of all widgets automatically  --}}\r\n{{#each defaultmarkups}}\r\n<b:defaultmarkup type='{{@key}}'>\r\n  {{#each this}}\r\n  <b:includable id='{{this}}'/>\r\n  {{/each}}\r\n</b:defaultmarkup>\r\n{{/each}}\n",
  "super.snippet": "{{!--\r\nCreates a snippet of a string\r\n@author zkreations\r\n@param {string} string - Text to be shortened\r\n@param {string} [tag=\"p\"] - Container HTML tag\r\n@param {string} [class] - Container class\r\n@param {string} [id] - Container id\r\n@param {number} [length=70] - Length of the string\r\n--}}\r\n<b:includable id='@snippet'>\r\n  <b:if cond='data:string and (data:string snippet {\r\n      links: false,\r\n      ellipsis: false,\r\n      linebreaks: false\r\n    }) != \"\"'>\r\n    {{!-- Sanitize length --}}\r\n    <b:with value='data:length ?: 70' var='length'>\r\n    <b:with value='(data:length + 0) == data:length ? (data:length * 1) : 70' var='length'>\r\n      {{!-- Create snippet container tag --}}\r\n      <b:tag expr:name='data:tag ?: \"p\"'>\r\n        {{!-- Add snippet container class and id --}}\r\n        <b:class cond='data:class' expr:name='data:class'/>\r\n        <b:attr name='id' expr:value='data:id'/>\r\n        {{!-- Add snippet content --}}\r\n        <b:eval expr='(data:string snippet {\r\n            length: data:length,\r\n            links: false,\r\n            ellipsis: false,\r\n            linebreaks: false\r\n          }) + \"...\"'/>\r\n      </b:tag>\r\n    </b:with>\r\n    </b:with>\r\n  <b:else/>\r\n    <b:comment render='true'>No text to display</b:comment>\r\n  </b:if>\r\n</b:includable>\n",
  "super.picture": "{{!--\r\nCreate custom picture tag\r\n@author zkreations\r\n@param {image} src - Image url\r\n@param {array} [resizeSet] - Change dimensions\r\n@param {string} [alt=data:messages.image] - Fallback text\r\n@param {string} [id] - Unique id\r\n@param {string} [class] - Additional classes\r\n@param {string} [width] - Image width\r\n@param {string} [height] - Image height\r\n@param {string} [ratio] - Aspect ratio\r\n@param {string} [loading] - Loading attribute\r\n@param {string} [params] - Additional Google image parameters (zkreations.com/image-params)\r\n--}}\r\n<b:includable id='@picture'>\r\n  <b:if cond='data:src'>\r\n  <picture>\r\n    {{!-- Check if image is hosted on Blogger --}}\r\n    <b:with value='data:src.isYoutube\r\n      ? data:src.youtubeMaxResDefaultUrl\r\n      : data:src' var='source'>\r\n    <b:with value='{\r\n        set: resizeImage(data:source, (data:resizeSet ?: [700,400]), data:ratio),\r\n        size: resizeImage(data:source, (data:resizeSet.first ?: 600), data:ratio),\r\n      }' var='images'>\r\n      {{!-- Generate all sizes --}}\r\n      <b:loop reverse='true' index='i' values='data:images.set' var='image'>\r\n        {{!-- Check if image is hosted on Google for additional parameters --}}\r\n        <b:with value='[\r\n          \"content.com/img/a/\",\r\n          \"content.com/blogger_img_proxy\"\r\n        ]' var='servers'>\r\n        <b:with value='data:params and (data:servers any (server => server in data:image.url))\r\n          ? (data:image.url + \"-\" + data:params)\r\n          : data:image.url' var='imageUrl'>\r\n          <b:if cond='data:images.set.size != (data:i + 1)'>\r\n            <source expr:media='\"(min-width:\" + data:image.size + \"px)\"' expr:srcset='data:imageUrl'/>\r\n          <b:else/>\r\n            {{!-- Generate the last size --}}\r\n            <b:tag expr:src='data:imageUrl' expr:alt='data:alt ?: data:messages.image' name='img'>\r\n              <b:attr name='b:whitespace' value='remove'/>\r\n              {{!-- Attributes --}}\r\n              <b:class cond='data:class' expr:name='data:class'/>\r\n              <b:attr name='width' expr:value='data:width ?: data:images.size.width'/>\r\n              <b:attr name='height' expr:value='data:height ?: data:images.size.height'/>\r\n              <b:attr name='id' expr:value='data:id'/>\r\n              <b:attr name='loading' expr:value='data:loading'/>\r\n            </b:tag>\r\n          </b:if>\r\n        </b:with>\r\n        </b:with>\r\n      </b:loop>\r\n    </b:with>\r\n    </b:with>\r\n  </picture>\r\n  <b:else/>\r\n    <b:comment render='true'>Parameter [src] is required.</b:comment>\r\n  </b:if>\r\n</b:includable>\n",
  "super.meta": "{{!--\r\nHeader metadata\r\n@author zkreations\r\n@param {string} [cardType=\"summary_large_image\"] - Twitter card type\r\n@param {image} [favicon] - Url of multiple resolutions favicon\r\n@param {array} [favSizes=\"[32,96,180,192]\"] - Array of numbers/dimensions for favicons\r\n@param {string} [robots] - Custom meta robots specifications\r\n@param {string} [ogImage] - Default social networks image\r\n--}}\r\n<b:includable id='@meta'>\r\n  {{!-- Common --}}\r\n  <meta expr:charset='data:blog.encoding'/>\r\n  <meta content='width=device-width,initial-scale=1' name='viewport'/>\r\n  {{!-- Favicon --}}\r\n  <b:if cond='data:favicon'>\r\n    {{!-- If favicon is defined, use it --}}\r\n    <b:loop values='(data:favSizes ?: [32,96,180,192])' var='size'>\r\n      <link expr:href='resizeImage(data:favicon, data:size, \"1:1\")' rel='icon' expr:sizes='data:size + \"x\" + data:size' type='image/png'/>\r\n    </b:loop>\r\n    <b:else/>\r\n    {{!-- If favicon is not defined, use the default favicon --}}\r\n    <link expr:href='data:blog.blogspotFaviconUrl' rel='icon' type='image/x-icon'/>\r\n  </b:if>\r\n  {{!-- Description --}}\r\n  <meta expr:content='data:view.description.escaped' name='description'/>\r\n  {{!-- Force https on Canonicals url --}}\r\n  <b:with value='data:https ? data:view.url.canonical.https : data:view.url.canonical' var='canonical'>\r\n    <link expr:href='data:canonical' rel='canonical'/>\r\n    <meta expr:content='data:canonical' property='og:url'/>\r\n    <meta expr:content='data:canonical' name='twitter:url'/>\r\n  </b:with>\r\n  {{!-- Robots --}}\r\n  {{!-- If is homepage or single item, use the robots specified in the config, otherwise, use noindex,follow --}}\r\n  <meta expr:content='data:view.isHomepage or data:view.isSingleItem ? (data:robots ?: \"index,follow,max-snippet:-1,max-image-preview:large,max-video-preview:-1\") : \"noindex,follow\"' name='robots'/>\r\n  {{!-- Open Graph --}}\r\n  {{!-- If is single item, use article, otherwise, use website --}}\r\n  <meta expr:content='not data:view.isSingleItem ? \"article\" : \"website\"' property='og:type'/>\r\n  {{!-- Set title and description as og:title and og:description --}}\r\n  <meta expr:content='data:view.title.escaped' property='og:title'/>\r\n  <meta expr:content='data:view.description.escaped' property='og:description'/>\r\n  {{!-- Set featured image as og:image --}}\r\n  <b:if cond='data:view.featuredImage or data:ogImage or data:widgets.Blog.first.posts.first.featuredImage'>\r\n    <b:with value='resizeImage((data:view.featuredImage ?: (data:ogImage != \"\" ? data:ogImage : data:widgets.Blog.first.posts.first.featuredImage)), 1200, \"1200:630\")' var='image'>\r\n      <meta expr:content='data:image' property='og:image'/>\r\n      <meta expr:content='data:image' name='twitter:image'/>\r\n      <b:if cond='data:image.isResizable'>\r\n        <meta expr:content='data:image.width' property='og:image:width'/>\r\n        <meta expr:content='data:image.height' property='og:image:height'/>\r\n      </b:if>\r\n    </b:with>\r\n  </b:if>\r\n  {{!-- Twitter --}}\r\n  <meta expr:content='data:cardType ?: \"summary_large_image\"' name='twitter:card'/>\r\n  <meta expr:content='data:view.description.escaped' name='twitter:description'/>\r\n</b:includable>\n",
  "super.menu": "{{!--\r\nCreate a menu from a list of links\r\n@author zkreations\r\n@param {array} links - Array of links\r\n@param {string} [prefix=\"__\"] - Prefix for filter links\r\n@param {string} [class] - Class for the menu\r\n@param {string} [id] - Id for the menu\r\n--}}\r\n<b:includable id='@menu'>\r\n  <b:with value='data:prefix ?: \"__\"' var='prefix'>\r\n    {{!-- Check if the first element contains the prefix --}}\r\n    <b:if cond='data:links[0].title contains data:prefix'>\r\n      <b:comment render='true'>The first element can't have the prefix</b:comment>\r\n    {{!-- Check if the element is a number --}}\r\n    <b:elseif cond='data:links any (l => l.title + 0 == l.title)'/>\r\n      <b:comment render='true'>The element can't be a number</b:comment>\r\n    {{!-- Check if the array is empty --}}\r\n    <b:elseif cond='!data:links.any'/>\r\n      <b:comment render='true'>The array is empty</b:comment>\r\n    {{!-- Start the menu --}}\r\n    <b:else/>\r\n      <ul class='nav'>\r\n        {{!-- Add classes and id to the menu --}}\r\n        <b:class cond='data:class' expr:name='data:class'/>\r\n        <b:attr name='id' expr:value='data:id'/>\r\n        <b:loop index='i' values='data:links' var='link'>\r\n          {{!-- Check if the current or the next element contains the prefix --}}\r\n          <b:with value='{\r\n              current: (data:link.title contains data:prefix),\r\n              next: (data:links[data:i + 1].title contains data:prefix)\r\n            }' var='hasPrefix'>\r\n          {{!-- Check if the menu has to be started or ended --}}\r\n          <b:with value='{\r\n              start: (data:hasPrefix.next and !data:hasPrefix.current),\r\n              end: (!data:hasPrefix.next and data:hasPrefix.current)\r\n            }' var='menu'>\r\n            {{!-- Create a element of the menu --}}\r\n            &lt;li class=\"nav-item<b:if cond='data:menu.start'> has-subnav</b:if>\"&gt;\r\n            {{!-- Create a link --}}\r\n            <a class='nav-link' expr:href='data:link.href'><data:link.title/></a>\r\n            {{!-- Start the submenu --}}\r\n            <b:if cond='data:menu.start'>\r\n              &lt;ul class=\"nav-subnav\"&gt;\r\n            </b:if>\r\n            {{!-- End the submenu --}}\r\n            <b:if cond='data:menu.end'>&lt;/li&gt;&lt;/ul&gt;</b:if>\r\n            {{!-- End the element of the menu --}}\r\n            <b:if cond='!data:menu.start'>&lt;/li&gt;</b:if>\r\n          </b:with>\r\n          </b:with>\r\n        </b:loop>\r\n      </ul>\r\n    </b:if>\r\n  </b:with>\r\n</b:includable>\n",
  "super.kind": "{{!--\r\nadd classes to body tag based on the current view\r\n@author zkreations\r\n--}}\r\n<b:includable id='@kind'>\r\n  <b:class cond='data:view.isHomepage' name='is-home'/>\r\n  <b:class cond='data:view.isMultipleItems' name='is-items'/>\r\n  <b:class cond='data:view.isPost' name='is-post'/>\r\n  <b:class cond='data:view.isPage' name='is-page'/>\r\n  <b:class cond='data:view.isArchive' name='is-archive'/>\r\n  <b:class cond='data:view.isLabelSearch' name='is-label'/>\r\n  <b:class cond='data:view.isSearch' name='is-search'/>\r\n  <b:class cond='data:view.isError' name='is-error'/>\r\n  <b:class cond='data:view.isPreview' name='is-preview'/>\r\n  {{!-- add class based on the current post/page id --}}\r\n  <b:class cond='data:view.isSingleItem' expr:name='\"is-single single-id-\" + (data:view.postId ?: data:view.pageId)'/>\r\n</b:includable>\n",
  "super.image": "{{!--\r\nCreate custom image tag\r\n@author zkreations\r\n@param {image} src - Image url\r\n@param {string} [alt=data:messages.image] - Fallback text\r\n@param {string} [id] - Unique id\r\n@param {string} [class] - Additional classes\r\n@param {string} [width] - Image width\r\n@param {string} [height] - Image height\r\n@param {number} [resize] - Change dimensions\r\n@param {string} [ratio] - Aspect ratio\r\n@param {string} [sizes] - Sizes attribute value\r\n@param {array} [srcset] - Array of dimensions\r\n@param {string} [loading] - Loading attribute\r\n@param {string} [params] - Additional Google image parameters\r\n--}}\r\n<b:includable id='@image'>\r\n  <b:if cond='data:src'>\r\n    {{!-- Check if image is hosted on Blogger --}}\r\n    <b:with value='data:src.isYoutube\r\n      ? data:src.youtubeMaxResDefaultUrl\r\n      : data:src' var='source'>\r\n    <b:with value='(data:resize\r\n      ? resizeImage(data:source, data:resize, data:ratio)\r\n      : (data:source))' var='image'>\r\n      <b:tag expr:alt='data:alt ?: data:messages.image' name='img'>\r\n        {{!-- Close tag --}}\r\n        <b:attr name='b:whitespace' value='remove'/>\r\n        {{!-- Id and class --}}\r\n        <b:attr name='id' expr:value='data:id'/>\r\n        <b:class cond='data:class' expr:name='data:class'/>\r\n        {{!-- Width and height --}}\r\n        <b:attr name='width' expr:value='data:width ?: data:image.width'/>\r\n        <b:attr name='height' expr:value='data:height ?: data:image.height'/>\r\n        {{!-- Sizes attribute --}}\r\n        <b:attr name='sizes' expr:value='data:sizes'/>\r\n        {{!-- Loading attribute --}}\r\n        <b:attr name='loading' expr:value='data:loading'/>\r\n        {{!-- Check if image is hosted on Google for additional parameters --}}\r\n        <b:with value='[\r\n          \"content.com/img/a/\",\r\n          \"content.com/blogger_img_proxy\"\r\n        ]' var='servers'>\r\n        <b:with value='data:params and (data:servers any (server => server in data:image))\r\n          ? (\"-\" + data:params)\r\n          : \"\"' var='params'>\r\n          {{!-- If srcset exists, generate the src attribute --}}\r\n          <b:attr name='src' expr:value='(data:srcset\r\n            ? resizeImage(data:image, data:srcset.first, data:ratio)\r\n            : data:image) + data:params'/>\r\n        </b:with>\r\n        </b:with>\r\n        {{!-- If srcset exists, generate the srcset attribute --}}\r\n        <b:if cond='data:srcset'>\r\n          <b:attr name='srcset' expr:value='sourceSet(data:image, data:srcset, data:ratio)'/>\r\n        </b:if>\r\n      </b:tag>\r\n    </b:with>\r\n    </b:with>\r\n  <b:else/>\r\n    <b:comment render='true'>Parameter [src] is required.</b:comment>\r\n  </b:if>\r\n</b:includable>\n",
  "super.avatar": "{{!--\r\nReplace the default avatar image with a custom image\r\n@author zkreations\r\n@param {image} src - Avatar image url\r\n@param {image} [default] - Default image url\r\n--}}\r\n<b:includable id='@avatar'>\r\n  <b:if cond='data:src'>\r\n    <b:with value='data:default ?: \"https://lh3.googleusercontent.com/a/default-user\"' var='default'>\r\n      <b:with value='resizeImage((data:src contains \"/img/bl\" ? data:default : data:src), (data:resize ?: 40), \"1:1\")' var='avatar'>\r\n        <b:tag expr:alt='data:alt ?: data:messages.image' expr:src='data:avatar' name='img'>\r\n          {{!-- Close tag --}}\r\n          <b:attr name='b:whitespace' value='remove'/>\r\n          {{!-- Width and height --}}\r\n          <b:attr name='width' expr:value='data:avatar.width'/>\r\n          <b:attr name='height' expr:value='data:avatar.height'/>\r\n          {{!-- Loading attribute --}}\r\n          <b:attr name='loading' expr:value='data:loading'/>\r\n          {{!-- Additional classes --}}\r\n          <b:class cond='data:class' expr:name='data:class'/>\r\n        </b:tag>\r\n      </b:with>\r\n    </b:with>\r\n  <b:else/>\r\n    <b:comment render='true'>Parameter [src] is required.</b:comment>\r\n  </b:if>\r\n</b:includable>\n",
  "super.attr": "{{!--\r\nAdd or remove multiple attributes\r\n@author zkreations\r\n@arg {Array[Array]} - Matriz de matrices\r\n--}}\r\n<b:includable id='@attr'>\r\n  <b:loop values='data:' var='i'>\r\n    <b:attr expr:name='data:i[0] ?: \"null\"' expr:value='data:i[1]'/>\r\n  </b:loop>\r\n</b:includable>\n",
  "super.adsense": "{{!--\r\nAdSense async script\r\n@author zkreations\r\n--}}\r\n<b:includable id='@adsense'>\r\n  <b:if cond='data:blog.adsenseHostId and not data:blog.adsenseAutoAds'>\r\n    <b:tag async='async' name='script' cond='data:blog.adsenseClientId and data:blog.adsenseHasAds' expr:src='\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" params {client: data:blog.adsenseClientId}' crossorigin='anonymous'/>\r\n  </b:if>\r\n</b:includable>\n",
  "super.ads": "{{!--\r\nCreate adsense ads\r\n@author zkreations\r\n@param {string} [style=\"display: block\"] - Inline style\r\n@param {string} [slot] - ID of ad slot created in Adsense\r\n@param {string} [layout] - ID of layout (in-feed & in-article ads)\r\n--}}\r\n<b:includable id='@ads'>\r\n  <b:tag class='adsbygoogle' name='ins' data-full-width-responsive='true'>\r\n    {{!-- Ad client ID & host ID --}}\r\n    <b:attr name='data-ad-client' expr:value='data:adClientId ?: data:blog.adsenseClientId'/>\r\n    <b:attr name='data-ad-host' expr:value='data:blog.adsenseHostId'/>\r\n    {{!-- Ads slot ID --}}\r\n    <b:attr name='data-ad-slot' expr:value='data:slot'/>\r\n    {{!-- Ads format --}}\r\n    <b:attr name='data-ad-format' expr:value='data:layout ? \"fluid\" : \"auto\"'/>\r\n    {{!-- Layout (in-feed & in-article ads) --}}\r\n    <b:attr expr:name='\"data-ad-layout\" + (data:layout != \"in-article\" ? \"-key\" : \"\")' expr:value='data:layout'/>\r\n    {{!-- Inline style --}}\r\n    <b:attr name='style' expr:value='data:style ?: \"display: block\"'/>\r\n  </b:tag>\r\n  <script>(adsbygoogle = window.adsbygoogle || []).push({})</script>\r\n</b:includable>\n",
  "super.functions": "{{> super.adsense}}\n{{> super.ads}}\n{{> super.attr}}\n{{> super.avatar}}\n{{> super.image}}\n{{> super.kind}}\n{{> super.menu}}\n{{> super.meta}}\n{{> super.picture}}\n{{> super.snippet}}\n"
}
